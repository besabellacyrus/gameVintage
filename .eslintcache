[{"C:\\Users\\cybes\\Documents\\Parlay\\vintage\\src\\index.js":"1","C:\\Users\\cybes\\Documents\\Parlay\\vintage\\src\\reportWebVitals.js":"2","C:\\Users\\cybes\\Documents\\Parlay\\vintage\\src\\App.js":"3","C:\\Users\\cybes\\Documents\\Parlay\\vintage\\src\\components\\Home.js":"4","C:\\Users\\cybes\\Documents\\Parlay\\vintage\\src\\components\\Header.js":"5","C:\\Users\\cybes\\Documents\\Parlay\\vintage\\src\\api\\index.js":"6","C:\\Users\\cybes\\Documents\\Parlay\\vintage\\src\\api\\game.js":"7","C:\\Users\\cybes\\Documents\\Parlay\\vintage\\src\\utils\\api-communication.js":"8","C:\\Users\\cybes\\Documents\\Parlay\\vintage\\src\\utils\\numbers.js":"9"},{"size":546,"mtime":1608200070125,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":3507,"mtime":1611922272899,"results":"13","hashOfConfig":"11"},{"size":24658,"mtime":1613725737673,"results":"14","hashOfConfig":"11"},{"size":3295,"mtime":1613723838936,"results":"15","hashOfConfig":"11"},{"size":369,"mtime":1610541710669,"results":"16","hashOfConfig":"11"},{"size":3385,"mtime":1610711219424,"results":"17","hashOfConfig":"11"},{"size":1277,"mtime":1610541063453,"results":"18","hashOfConfig":"11"},{"size":851,"mtime":1610544868494,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"qltcie",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\cybes\\Documents\\Parlay\\vintage\\src\\index.js",[],["41","42"],"C:\\Users\\cybes\\Documents\\Parlay\\vintage\\src\\reportWebVitals.js",[],"C:\\Users\\cybes\\Documents\\Parlay\\vintage\\src\\App.js",["43","44","45","46","47","48","49","50","51","52","53","54","55","56","57"],"// import logo from './logo.svg';\nimport './App.css';\nimport './components/index.scss';\nimport './assets/common/scss/main.scss'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams,\n  useHistory,\n  useLocation\n} from \"react-router-dom\";\nimport React, { useEffect, useState } from 'react';\nimport queryString from 'query-string';\nimport useApi from './api';\nimport { Home } from './components/Home'; \nimport { formatMoney, parseNumbers } from './utils/numbers';\n\nconst App = () => {\n  const location = useLocation();\n  const urlParams = queryString.parse(location.search); \n  const USERNUM = urlParams.SESSIONID;\n  const USERID = urlParams.USERID;\n  const SESSIONID = urlParams.SESSIONID;\n  const GAMEID = urlParams.GAMEID;\n  const api = useApi();\n  const [numberRounds, setNumberRounds] = useState([]);\n  const [gameNumbers, setGameNumbers] = useState([]);\n  const [spinData, setSpinData] = useState({});\n  const [errorState, setErrorState] = useState(false);\n\n  // const [next, setNext] = useState(1);\n  const [gameState, setGameState] = useState({\n    isGamePlaying: false,\n    currentRound: -1,\n    ACCOUNTVALUE: 0,\n    DRAWS: 1, \n  });\n \n  useEffect(() => {\n    initializeGame();\n  },[])\n\n  useEffect(() => {\n    console.log({ theError: errorState })\n  },[errorState])\n  \n  const initializeGame = async () => { \n    const game = await api.gameLogin({USERNUM, USERID, CONFIGID: 24 });\n    const config = await api.getConfig({\n        GAMEID: game.GAMEID,\n        USERNUM,\n        USERID\n    }); \n\n    setGameState({\n      ...gameState,\n      ...config,\n      ...game,\n      USERNUM,\n      USERID,\n    });\n    \n    console.log({ config, gameState, game })\n    getGameCounterData(game);\n  } \n\n  const getAndFollowGameState = async (game, next) => {\n    const gamestate = await api.getState({\n        GAMEID: game.GAMEID,\n        GAMETYPE: 'SL',\n        CONFIGID: '24',\n        USERNUM,\n        USERID,\n        TRANTYPE: 'GETSTATE'\n      }, next); \n    \n      console.warn({ thegame: game }) \n    console.log({ gggg: gamestate, next })\n    if (gamestate['AC'+next]) {\n      switch (gamestate['AC'+next]) {\n        case 'SPIN': \n          const spin  = await api.casinoServlet({\n            BETLINES: gamestate.BETLINES,\n            USERNUM: USERNUM,\n            GAMETYPE: 'SL',\n            DENOM: gamestate.DENOM,\n            USERID: USERID,\n            GAMEID: game.GAMEID,\n            TRANTYPE: 'SPIN',\n            BET: gamestate.BET,\n            LASTWAGERTYPE: gamestate.WAGERTYPE\n        })\n\n          console.log({ spin })  \n          if (spin.WON) {\n            setSpinData(spin)\n            getAndFollowGameState(game, next + 1)\n          }\n          break;\n        case 'WIN':\n        case 'LOSE':\n          getAndFollowGameState(game, next + 1)\n          break;\n        default:\n          console.log({ default: gamestate })\n          break;\n      }\n    } else {\n      // send to client \n    }\n  }\n\n  const getGameCounterData = async (game) => {\n    const gameCounter = await api.getGameCounter({\n      GAMEID: game.GAMEID,\n      USERNUM,\n      USERID,\n    }); \n\n    if (gameCounter['ERROR']) {\n      console.log({ gameCounterError: gameCounter })\n      setErrorState(gameCounter)\n      return;\n    }\n\n    console.log({ gameCounter })\n\n    getAndFollowGameState(game, 1); \n  } \n  \n\n  return ( \n    <main>\n      { !errorState ? (\n        <Home gameState={gameState} spinData={spinData}></Home>\n      ) :\n        <div>Error</div>\n      }\n    </main>\n  );\n}\n\nexport default App;\n","C:\\Users\\cybes\\Documents\\Parlay\\vintage\\src\\components\\Home.js",["58","59","60","61","62","63"],"C:\\Users\\cybes\\Documents\\Parlay\\vintage\\src\\components\\Header.js",["64","65"],"C:\\Users\\cybes\\Documents\\Parlay\\vintage\\src\\api\\index.js",[],"C:\\Users\\cybes\\Documents\\Parlay\\vintage\\src\\api\\game.js",["66","67"],"import axios from 'axios';\r\nimport qs from 'querystring';\r\nimport { parseResponse, prepPayload } from '../utils/api-communication';\r\n\r\nconst {\r\n    REACT_APP_API_BASE_URL\r\n} = process.env;\r\n\r\nlet previousResponse = {};\r\nlet NEXT = 1;\r\n\r\nexport const startGame = async (urlParams) => {\r\n    return await axios.post(`${REACT_APP_API_BASE_URL}/gameserver/GameLaunchServlet?LANGUAGE=en&USERID=${urlParams.USERID}&SESSIONID=${urlParams.SESSIONID}&GAMEID=SL24&LAUNCHER=PARLAY2&MOBILE=false`,\r\n        qs.stringify({\r\n            LANGUAGE: urlParams.LANGUAGE,\r\n            USERID: urlParams.USERID,\r\n            SESSIONID: urlParams.SESSIONID,\r\n            GAMEID: 'SL24',\r\n            LAUNCHER: 'PARLAY2',\r\n            MOBILE: false\r\n        }),\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            }\r\n        }\r\n    );\r\n};\r\n\r\nconst basic = async ({ GAMEID, USERNUM, USERID, TRANTYPE }) => {\r\n    const params = {\r\n        GAMETYPE: 'SL',\r\n        CONFIGID: 24,\r\n        TRANTYPE,\r\n        GAMEID,\r\n        USERNUM,\r\n        USERID,\r\n    };\r\n\r\n    return sendCasinoServlet(params);\r\n}\r\n\r\nconst sendCasinoServlet = async (params) => {\r\n    const response = await axios.post(\r\n        `${REACT_APP_API_BASE_URL}/gameserver/CasinoServlet`,\r\n        qs.stringify(params),\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            }\r\n        }\r\n    );\r\n\r\n    return parseResponse(response.data);\r\n}\r\n\r\nexport const casinoServlet = async (params, next) => {\r\n    if(params.TRANTYPE === 'GETSTATE') {\r\n        params = {\r\n            ...params,\r\n            NEXT\r\n        };\r\n\r\n        NEXT++;\r\n    } else if (params.TRANTYPE === 'BUYTICKETS') {\r\n        params = {\r\n            ...params,\r\n            NEXT: next - 1\r\n        };\r\n    }\r\n\r\n    const response = await axios.post(\r\n        `${REACT_APP_API_BASE_URL}/gameserver/CasinoServlet`,\r\n        qs.stringify(params),\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            }\r\n        }\r\n    );\r\n  \r\n    \r\n\r\n    const data = parseResponse(response.data);\r\n\r\n    previousResponse = data;\r\n\r\n    return data;\r\n};\r\n\r\n\r\nexport const getState = async (params, next) => {\r\n    const response = await axios.post(\r\n        `${REACT_APP_API_BASE_URL}/gameserver/CasinoServlet`,\r\n        qs.stringify({\r\n            ...params,\r\n            NEXT: next\r\n        }),\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            }\r\n        }\r\n    );\r\n\r\n    const data = parseResponse(response.data);\r\n\r\n    previousResponse = data;\r\n    return data;\r\n}\r\n\r\nexport const gameLogin = async (params) => {\r\n    return basic({\r\n        ...params,\r\n        TRANTYPE: 'GAMELOGIN'\r\n    });\r\n}\r\n \r\nexport const getConfig = async (params) => {\r\n    return basic({\r\n        ...params,\r\n        TRANTYPE: 'GETCONFIG'\r\n    });\r\n}\r\n\r\nexport const start = async (params) => {\r\n    return basic({\r\n        ...params,\r\n        TRANTYPE: 'START'\r\n    });\r\n}\r\n\r\nexport const getGameCounter = async (params) => {\r\n    return basic({\r\n        ...params,\r\n        TRANTYPE: 'GETGAMECOUNTER',\r\n    });\r\n}\r\n\r\nexport const spin = async (params) => {\r\n    const spin  = await casinoServlet(params)\r\n    console.log({ spinnnn: params, spin })\r\n}","C:\\Users\\cybes\\Documents\\Parlay\\vintage\\src\\utils\\api-communication.js",[],"C:\\Users\\cybes\\Documents\\Parlay\\vintage\\src\\utils\\numbers.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":6,"column":20,"nodeType":"74","messageId":"75","endLine":6,"endColumn":26},{"ruleId":"72","severity":1,"message":"76","line":7,"column":3,"nodeType":"74","messageId":"75","endLine":7,"endColumn":9},{"ruleId":"72","severity":1,"message":"77","line":8,"column":3,"nodeType":"74","messageId":"75","endLine":8,"endColumn":8},{"ruleId":"72","severity":1,"message":"78","line":9,"column":3,"nodeType":"74","messageId":"75","endLine":9,"endColumn":7},{"ruleId":"72","severity":1,"message":"79","line":10,"column":3,"nodeType":"74","messageId":"75","endLine":10,"endColumn":12},{"ruleId":"72","severity":1,"message":"80","line":11,"column":3,"nodeType":"74","messageId":"75","endLine":11,"endColumn":13},{"ruleId":"72","severity":1,"message":"81","line":18,"column":10,"nodeType":"74","messageId":"75","endLine":18,"endColumn":21},{"ruleId":"72","severity":1,"message":"82","line":18,"column":23,"nodeType":"74","messageId":"75","endLine":18,"endColumn":35},{"ruleId":"72","severity":1,"message":"83","line":25,"column":9,"nodeType":"74","messageId":"75","endLine":25,"endColumn":18},{"ruleId":"72","severity":1,"message":"84","line":26,"column":9,"nodeType":"74","messageId":"75","endLine":26,"endColumn":15},{"ruleId":"72","severity":1,"message":"85","line":28,"column":10,"nodeType":"74","messageId":"75","endLine":28,"endColumn":22},{"ruleId":"72","severity":1,"message":"86","line":28,"column":24,"nodeType":"74","messageId":"75","endLine":28,"endColumn":39},{"ruleId":"72","severity":1,"message":"87","line":29,"column":10,"nodeType":"74","messageId":"75","endLine":29,"endColumn":21},{"ruleId":"72","severity":1,"message":"88","line":29,"column":23,"nodeType":"74","messageId":"75","endLine":29,"endColumn":37},{"ruleId":"89","severity":1,"message":"90","line":43,"column":5,"nodeType":"91","endLine":43,"endColumn":7,"suggestions":"92"},{"ruleId":"72","severity":1,"message":"93","line":75,"column":12,"nodeType":"74","messageId":"75","endLine":75,"endColumn":19},{"ruleId":"72","severity":1,"message":"94","line":76,"column":20,"nodeType":"74","messageId":"75","endLine":76,"endColumn":25},{"ruleId":"72","severity":1,"message":"95","line":76,"column":33,"nodeType":"74","messageId":"75","endLine":76,"endColumn":42},{"ruleId":"89","severity":1,"message":"96","line":153,"column":8,"nodeType":"91","endLine":153,"endColumn":18,"suggestions":"97"},{"ruleId":"72","severity":1,"message":"98","line":166,"column":11,"nodeType":"74","messageId":"75","endLine":166,"endColumn":24},{"ruleId":"99","severity":1,"message":"100","line":375,"column":35,"nodeType":"101","messageId":"102","endLine":375,"endColumn":37},{"ruleId":"72","severity":1,"message":"103","line":13,"column":20,"nodeType":"74","messageId":"75","endLine":13,"endColumn":24},{"ruleId":"72","severity":1,"message":"95","line":13,"column":26,"nodeType":"74","messageId":"75","endLine":13,"endColumn":35},{"ruleId":"72","severity":1,"message":"104","line":3,"column":25,"nodeType":"74","messageId":"75","endLine":3,"endColumn":36},{"ruleId":"72","severity":1,"message":"105","line":108,"column":5,"nodeType":"74","messageId":"75","endLine":108,"endColumn":21},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'useParams' is defined but never used.","'useHistory' is defined but never used.","'formatMoney' is defined but never used.","'parseNumbers' is defined but never used.","'SESSIONID' is assigned a value but never used.","'GAMEID' is assigned a value but never used.","'numberRounds' is assigned a value but never used.","'setNumberRounds' is assigned a value but never used.","'gameNumbers' is assigned a value but never used.","'setGameNumbers' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initializeGame'. Either include it or remove the dependency array.","ArrayExpression",["108"],"'loading' is assigned a value but never used.","'pause' is assigned a value but never used.","'isPlaying' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setReels'. Either include it or remove the dependency array.",["109"],"'getWheelChunk' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'stop' is assigned a value but never used.","'prepPayload' is defined but never used.","'previousResponse' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},"Update the dependencies array to be: [initializeGame]",{"range":"114","text":"115"},"Update the dependencies array to be: [setReels, spinData]",{"range":"116","text":"117"},[1210,1212],"[initializeGame]",[3698,3708],"[setReels, spinData]"]